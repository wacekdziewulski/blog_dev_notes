---
layout: post
title:  "Teal Captain #2: I’m a leader?"
date:   2021-06-29 17:00:00 +0100
categories: management
---

	It took more that 10 years for me to become a Senior Software Engineer. Meanwhile my colleagues from the University made careers far more impressive, than I could think of. I accepted climbing the ladder at my own pace, as each time my promotion was just round the corner. There were just more than a few corners up ahead - something I have not anticipated. As a software engineer, who despite the best efforts just missed every promotion opportunity, I had more than enough time to wait, look and listen. I became especially aware of, what I believed was, good and bad leadership. Having worked with quite a few team leaders along the way, I kept mental notes of what I liked, what I admired, and what I would never like become - ever. I learned the most on the bad examples: throwing under the bus, obsession with micromanagement, lack of empathy, poor and insincere feedback or the lack of meaningful performance assessment for a longer period of time. These were the non-copyable no-no’s, which I would avoid like wildfire in my team. Well, future team. As if I actually had one...
	Even though I was still a software developer, I started taking responsibility in the management area. I mean, not formally, but I tried to be the architect, leader, main programmer. You name it. I failed in the long run anyway, so the promotion was off the table. At least for a good reason for once. Anyway, my vision of leadership, because I never gave up on that, was that it means more responsibility, tougher decisions, ownership. Being the one to make the hard calls, being the one to decide for the team. After all that’s who we call Leaders right? They lead, they show direction, we follow them, because they just know better. I wanted to know better, and sometimes I even knew better. I predicted what would happen to the project I was on and which I worked on from the very early days and failed to react properly, to fix, what I thought was unfixable. In some ways it was. Yet, I still failed to push through with the message, to step up, to act properly. When it came to facing the consequences, I truly believed that I built a team of supportive people around, who would stand up for me, who would at least partly take my side. No-one did. If I thought that I served anyone but myself, I was obviously wrong. Not that I didn’t read about the leader being the shepherd’s dog, the one who watches, who keeps the direction, but also the one who serves. It was about being for the people, not them being for you. Well, reality turned to be bitter.
	Fast-forward a little bit, I switched from C++ to Java, which was a refreshing experience. Not that I didn’t struggle at first, but still the overall process of working on a different product and in a much friendlier IDE was enjoyable. I set the “team leader” thing aside for some time, because I had enough coding and web-based topics to catch-up on. One more thing I learned along the way was the fact that if I ever wanted to lead a team, I would never do so, without the support of all of the members. If they pick me, fine, but never to go against them.
	Needless to say, I never became a team leader. I mean, not quite. When I was finally given the opportunity to become one, the company already made the split and the role (not position, which will be important later on) became known as the Team Captain (TC). So what’s so special about that role? Well, first of all, You’re still part of the team. You’re not above the other members. You’re not a team leader as we all know it. The responsibilities are shared between the Product Owner (PO) and You. While the PO takes care of the backlog and much of the technical stuff, the TC makes sure that the team reaches its full potential. We do that through 1:1 meetings, growth and career planning, discussing performance reviews every quarter. The role focuses on the performance of the team as a whole and also making sure that everyone in the team is satisfied with what they do and that their goals and aspirations are met within the company. There are two things associated with the role that I find the most important. First of all, the Team Captain serves the team - gives space and autonomy, facilitates growth, removes obstacles. Secondly, the TC is not a technical leader or at least, that’s not his main focus. That’s important, because we are used to having the best engineers become the team leaders. While this still happens, having people, who excel in both: engineering tasks and management is rare. More often than not, one of the actual roles will suffer depening on the actual skills of the newly appointed leader. The TC / PO split guarantees that each person focuses on their strongest suit and is able to focus on what’s important in their role.
	To sum up, I never became a Team Lead, luckily. Instead I got to become a Team Captain and I love it!
	Ok, so what should I do now?